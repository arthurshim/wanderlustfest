<?php

function haml_init($theme) {
  _haml_init();
  $file = dirname($theme->filename) .'/template.php';
  if (file_exists($file)) {
    include_once "./$file";
  }
}

function haml_extension() {
  return '.haml';
}

/**
 * Implementation of hook_theme to tell Drupal what templates the engine
 * and the current theme use. The $existing argument will contain hooks
 * pre-defined by Drupal so that we can use that information if
 * we need to.
 */
function haml_theme($existing, $type, $theme, $path) {
  $templates = drupal_find_theme_functions($existing, array('haml', $theme));
  $templates += drupal_find_theme_templates($existing, '.haml', $path);
  return $templates;
}

function haml_render_template($file, $variables) {
  if (!_haml_init()) {
    $messages = drupal_get_messages('haml-error');
    return implode("\n", $messages['haml-error']);
  }
  
  $parser = _haml_object();
  $parser->append($variables);
  return $parser->fetch($file);
}

function haml_block_javascript($text) {
  $embed_prefix = "\n<!--//--><![CDATA[//><!--\n";
  $embed_suffix = "\n//--><!]]>\n";
  return '<script type="text/javascript">'. $embed_prefix . $text . $embed_suffix ."</script>\n";
}

function haml_block_php($text) {
  return "<?php $test ?>";
}

function _haml_init() {
  $path = drupal_get_path('theme_engine', 'haml');
  if (!file_exists("$path/phpHaml/includes/haml/HamlParser.class.php")) {
    drupal_set_message(t('phpHaml is not installed correctly. Ensure the <em>phpHaml</em> is copied to %path.', array('%path' => $path)), 'haml-error');
    return false;
  }
  else {
    include_once "$path/phpHaml/includes/haml/HamlParser.class.php";
    if (!class_exists('HamlParser')) {
      drupal_set_message(t('phpHaml could not be initialized'), 'haml-error');
    }
  }
  if (!is_writable(file_directory_temp())) {
    drupal_set_message(t('The haml theme engine cannot write to %path.', array('%path' => file_directory_temp())), 'haml-error');
    return false;
  }
  return true;
}

function _haml_object() {
  static $parser = null;
  
  if (is_null($parser)) {
    $path = drupal_get_path('theme_engine', 'haml');
    $parser = new HamlParser(false, file_directory_temp());
    
    $parser->registerBlock('haml_block_javascript', 'javascript');
    $parser->registerBlock('haml_block_php', 'php');
    foreach (module_implements('haml_block') as $module) {
      $function = "{$module}_haml_block";
      $blocks = $function();
      if (is_array($blocks) && !empty($blocks)) {
        foreach ($blocks as $name => $callback) {
          $parser->registerBlock($callback, $name);
        }
      }
    }
    
    foreach (module_implements('haml_filter') as $module) {
      $function = "{$module}_haml_filter";
      $filters = $function();
      if (is_array($filters) && !empty($filters)) {
        foreach ($filters as $name => $callback) {
          $parser->registerFilter($callback, $name);
        }
      }
    }
  }
  else {
    $parser->clearVariables();
  }
  return $parser;
}