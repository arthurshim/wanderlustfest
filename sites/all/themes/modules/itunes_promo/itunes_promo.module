<?php

/**
*Implementation of hook_menu
*/
function itunes_promo_menu() {
  $items['itunes_promo/click'] = array(
  'title' => '',
  'page callback' => 'itunes_promo_click',
  'access arguments' => array('access content'),
  'type' => MENU_CALLBACK
  );
  $items['itunes_promo/report'] = array(
  'title' => '',
  'page callback' => 'itunes_promo_report',
  'access arguments' => array('administer site configuration'),
  'type' => MENU_CALLBACK
  );

  return $items;
}


function itunes_promo_report($campaign) {
  $html = '';
  if ($campaign) {
    $codes_served    = db_result(db_query("SELECT count(*) FROM {itunes_promo} WHERE ip != '' AND campaign = '%s'", $campaign));
    $codes_clicked   = db_result(db_query("SELECT count(*) FROM {itunes_promo} WHERE clicked != 0 AND campaign = '%s'", $campaign));
    $codes_remaining = db_result(db_query("SELECT count(*) FROM {itunes_promo} WHERE ip = '' AND campaign = '%s'", $campaign));
    $html = '<div style="center">';
    $html .= "<div><strong>Codes Served:</strong> $codes_served</div>";
    $html .= "<div><strong>Codes Clicked:</strong> $codes_clicked</div>";
    $html .= "<div><strong>Codes Remaining:</strong> $codes_remaining</div>";
    $html .= "</div>";
  }
  else {
    $html = '<div>Campaigns</div>';
    $result = db_query('SELECT DISTINCT(campaign) FROM {itunes_promo}');
    while ($data = db_fetch_object($result)) {
      $html .= '<div>'. l($data->campaign, 'itunes_promo/report/'. $data->campaign) .'</div>'; 
    }
    $html .= '</div>';

  }
  return $html;
}

/**
 *  Returns iTunes promo code, or FALSE if none left in campaign
 *    @params
 *      $ip_address - IP address of user requesting code
 *      $campaign   - alphanumeric name of the campaign
 */
function itunes_promo_get_code($ip_address, $campaign) {
  //Check if user already has a code redeemed, based on cookie
  if (isset($_COOKIE['wl_'. $campaign]) && $cookie = $_COOKIE['wl_'. $campaign]) {
    $result = db_result(db_query("SELECT code FROM {itunes_promo} WHERE cookie = '%s' AND campaign = '%s'", $cookie, $campaign));
    return $result;
  }
  //Else select unredeemed code
  elseif ($code = db_result(db_query("SELECT code FROM {itunes_promo} WHERE ip = '' AND campaign = '%s' LIMIT 1", $campaign))) {
    //Use generate random string as unique identifier 
    $salt = 'wl201211';
    $rnd = mt_rand(0, 0x7fffffff ) ^ crc32($salt) ^ crc32( microtime() );
    $cookie = md5($rnd);

    setcookie('wl_'. $campaign, $cookie, time() + 24*60*60*30, NULL, '.wanderlustfestival.com');  //Set cookie to expire in a month
    db_query("UPDATE {itunes_promo} SET ip = '%s', cookie = '%s', retrieved = %d WHERE code = '%s'", $ip_address, $cookie, time(), $code);
    return $code;
  }
  //No more codes available
  else {
    return FALSE;
  }
}


/*
 *  Page callback for click tracking
 */
function itunes_promo_click($campaign) {
  $ip_address = $_SERVER['REMOTE_ADDR'];
  if (isset($_COOKIE['wl_'. $campaign])) {
    $data = db_fetch_object(db_query("SELECT code, retrieved, clicked FROM {itunes_promo} WHERE cookie = '%s' AND campaign = '%s'", $_COOKIE['wl_'. $campaign], $campaign));
    if (!$data) {
      drupal_set_message('Error: code was never retrieved!');
      drupal_goto('itunes');
    }
    else {
      if ($data->clicked == 0) {
        db_query("UPDATE {itunes_promo} SET clicked = %d WHERE cookie = '%s' AND campaign = '%s'", time(), $_COOKIE['wl_'. $campaign], $campaign);
      }
      drupal_goto('https://buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/freeProductCodeWizard?code='. $data->code);
    }
  }
  else {
    drupal_set_message('You must enable cookies to redeem this offer.');
    drupal_goto('itunes');    
  }
}

/**
*Implementation of hook_theme
*/
function itunes_promo_theme(){
  return array(
  'itunes_promo_button' => array(
    'arguments' => array('code' => NULL, 'campaign' => NULL, 'type' => 'music'),
    'template' => 'itunes_promo_button',
    ),
  );
} 



