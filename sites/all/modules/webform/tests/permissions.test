<?php
<<<<<<< HEAD
=======
// $Id$
>>>>>>> 11c42aacd2cce208210c8578843c892e1112f1a8

/**
 * @file
 * Webform module permission tests.
 */

<<<<<<< HEAD
include_once(dirname(__FILE__) . '/webform.test');

class WebformPermissionsTestCase extends WebformTestCase {
  /**
   * Implements getInfo().
=======
include_once(dirname(__FILE__) .'/webform.test');

class WebformPermissionsTestCase extends WebformTestCase {
  /**
   * Implementation of getInfo().
>>>>>>> 11c42aacd2cce208210c8578843c892e1112f1a8
   */
  public static function getInfo() {
    return array(
      'name' => t('Webform permissions'),
      'description' => t('Create webforms and check editing and access permissions.'),
      'group' => t('Webform'),
    );
  }

  /**
<<<<<<< HEAD
   * Implements setUp().
=======
   * Implementation of setUp().
>>>>>>> 11c42aacd2cce208210c8578843c892e1112f1a8
   */
  function setUp() {
    parent::setUp();
  }

  /**
<<<<<<< HEAD
   * Implements tearDown().
=======
   * Implementation of tearDown().
>>>>>>> 11c42aacd2cce208210c8578843c892e1112f1a8
   */
  function tearDown() {
    parent::tearDown();
  }

  /**
   * Create a webform node in which authenticated users have access to submit.
  */
  function testWebformSubmitAccess() {
    $this->webformReset();
    $node = $this->testWebformForm();
    $node->webform['roles'] = array(2);
    node_save($node);

    // Test that the authenticated user is able to access.
    $this->drupalLogin($this->webform_users['userAccess']);
<<<<<<< HEAD
    $this->drupalGet('node/' . $node->nid);
    $this->assertText($node->body, t('Webform node created and accessible to authenticated users at !url', array('!url' => 'node/' . $node->nid)), t('Webform'));
=======
    $this->drupalGet('node/'. $node->nid);
    $this->assertText($node->body, t('Webform node created and accessible to authenticated users at !url', array('!url' => 'node/'. $node->nid)), t('Webform'));
>>>>>>> 11c42aacd2cce208210c8578843c892e1112f1a8

    // Confirm that the submission has been created.
    $this->drupalPost(NULL, array(), 'Submit');
    $this->assertText($node->webform['confirmation'], t('Confirmation message "@confirmation" received.', array('@confirmation' => $node->webform['confirmation'])), t('Webform'));
    $this->drupalLogout();

    // The anonymous user should not be able to submit.
<<<<<<< HEAD
    $this->drupalGet('node/' . $node->nid);
    // Note: Should be: You must <a href="!login">login</a> or <a href="!register">register</a> to view this form.
    // Something in SimpleTest isn't handling the string correctly.
    $this->assertText('to view this form.', t('Anonymous user is not allowed to submit form.'), t('Webform'));
=======
    $this->drupalGet('node/'. $node->nid);
    // Note: Should be: You must <a href="!login">login</a> or <a href="!register">register</a> to view this form.
    // Something in SimpleTest isn't handling the string correctly.
    $this->assertText(t(' to view this form.', array('!login' => url('user/login'), '!register' => url('user/register'))), t('Anonymous user is not allowed to submit form.'), t('Webform'));
    $this->drupalLogout();
>>>>>>> 11c42aacd2cce208210c8578843c892e1112f1a8
  }

  /**
   * Create webform
   */

}
