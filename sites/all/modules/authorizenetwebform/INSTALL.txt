$Id: INSTALL.txt,v 1.1.2.2 2009/05/02 02:05:55 obsidiandesign Exp $
Requirements
------------
Drupal 6.x, Authorize.Net account, PHP + CURL enabled

Installation
------------
1. Copy the authorizenetwebform directory to the Drupal modules directory for your site

2. Login as an administrator. Enable the module in the "Administer" -> "Build" -> "Modules"

3. Go to "Administer" -> "site configuration" -> "Authorize.Net Payment Webform"

   From the Post URL dropdown, you can select the Developer (test) server, or the Main 
   Authorize.Net server.  The default is the development server, so make sure to change
   the server selection when putting the module into production.

   If you have any additional fields you'd like to pass to Authorize.Net, enter them into 
   the 'Custom Fields' box.  Enter in the format key|description.  To find the correct key
   name, visit the AIM Implementation Guide at http://developer.authorize.net/guides/AIM/.
   Under 'Section Three - Transaction Data Requirements', in the AIM Transaction Submission
   API link, is the listing of available fields you can submit.

   Enter a valid Authorize.Net API Login ID - NOT your username.

   Enter the corresponding Account Transaction Key - NOT your password.

   Make sure that you check the 'Change Login Information' box.

   Save the configuration.  Note that the password will not display (for security reasons),
   but is stored in the database.

4. Create or edit a webform that you would like to have users submit a payment for.

   Under 'Webform Advanced Settings', add the following code for 'Additional Validation', with
   the leading space removed before the <?php line:
   
	<?php
	  require_once(drupal_get_path('module', 'authorizenetwebform') . '/authorizenetwebform.module');
	  $form_state = authorizenetwebform_process("validate", $node, $form_id, $form_state);
	?>

   Then, in the 'Additional Processing' box, add the following code, again removing the leading
   space removed before the <?php line:

	<?php
	  require_once(drupal_get_path('module', 'authorizenetwebform') . '/authorizenetwebform.module');
	  $form_state = authorizenetwebform_process("submit", $node, $form_id, $form_state);
	?>


   For each component added, you may select a Authorize.Net field to map to.  The required fields
   are listed for easy mapping.  Custom fields must be entered into the "Administer" ->
   "Site Configuration" -> "Authorize.Net Payment Webform" screen.

   As the last entry in the Webform, add a hidden field 'Transaction ID'.  Select 'Transaction ID'
   as the Authorize.Net key to map to.  The transaction ID must be mapped, or the module will not 
   work correctly.

   Save the webform.

5. As your webform is submitted, the credit card information will be authorized and charged.  There will
   be a slight delay during submission while the transaction is processed.  The credit card number will
   not be stored in your database, for security purposes.  The last 4 digits will be saved, while the 
   other digits will be replaced with x's.
