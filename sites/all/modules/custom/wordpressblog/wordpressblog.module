<?php

function wordpressblog_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  switch ($op) {
    case 'presave':
      if ($node->type == 'wblog') {
       //  watchdog('wordpressblog', '<pre>' . print_r($node->teaser , 1) . '</pre>', array(), WATCHDOG_WARNING);
      	
      }
      break;
  }
}

/**
 * Implements hook_feeds_plugins().
 */
function wordpressblog_feeds_plugins() {
	$info = array();

	$info['WordpressblogFeedsParser'] = array(
		'name' => 'Wordpressblog parser',
		'description' => 'Parse nodes from wordpressblog',
		'handler' => array(
			'parent' => 'FeedsSimplePieParser',
			'class' => 'WordpressblogFeedsParser',
			'file' => 'WordpressblogFeedsParser.inc',
			'path' => drupal_get_path('module', 'wordpressblog') . '/feeds/',
		),
	);

	return $info;
}

function wordpressblog_enable() {
	cache_clear_all('plugins:feeds:plugins', 'cache');
}

function wordpressblog_feeds_node_processor_targets_alter(&$targets, $content_type) {
	$targets['sites'] = array(
		'name' => 'Wordpress blog sites', 
		'description' => 'Sites for wordpress blog',
		'callback' => 'wordpressblog_set_target',
	);

	$targets['image'] = array(
		'name' => 'Image field',
		'description' => 'Image field',
		'callback' => 'wordpressblog_set_image_target',
	);

}

function wordpressblog_set_image_target(&$node, $target, $value) {
	if(user_access('administer site configuration')) {
		$image_path = wordpressblog_save_image($value);
		$node->field_wblog_image2 = array(field_file_save_file($image_path));
	}
}

function wordpressblog_save_image($url) {
	// Request for image.
	$req = drupal_http_request($url);
	// Check if ok.
	if($req->code == 200) {
		// Get type of image.
		$filetype = str_replace('image/', '', $req->headers['Content-Type']);
		// Create unique name of image.
		$filename =   md5($url) . '.' . $filetype;
		return file_save_data($req->data, $filename);
	}

	return FALSE;
}

function wordpressblog_set_target(&$node, $target, $value) {
	if(strlen($value) > 0) {
		$names = explode(',', $value);
		$node->taxonomy = array();
		foreach ($names as $term_name) {
			$term = array_shift(taxonomy_get_term_by_name($term_name));
			$node->taxonomy[] = $term->tid;
		}
	}
}
